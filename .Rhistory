legend('topleft', legend=unique(Species), col= 1:3)
plot1<- plot(Petal.Length,Petal.Width, col= Species)
plot1
plot(Petal.Length,Petal.Width)
plot(Petal.Length, Petal.Width,
frame.plot = FALSE,
main = 'Petal width as a f() of length',
xlab = 'Length (cm)',
ylab = 'Width (cm)',
cex = 2px,
plot(Petal.Length, Petal.Width,
frame.plot = FALSE,
main = 'Petal width as a f() of length',
xlab = 'Length (cm)',
ylab = 'Width (cm)',
cex = 1,
pch = 19)
plot(Petal.Length, Petal.Width,
frame.plot = FALSE,
main = 'Petal width as a f() of length',
xlab = 'Length (cm)',
ylab = 'Width (cm)',
cex = .5,
pch = 19)
plot(Petal.Length, Petal.Width)
plot(Petal.Length, Petal.Width,
frame.plot = FALSE,
main = 'Petal width as a f() of length',
xlab = 'Length (cm)', ylab = 'Width (cm)',
cex = .75, pch = 19)
plot(Petal.Length, Petal.Width)
plot(Petal.Length, Petal.Width,
frame.plot = FALSE,
main = 'Petal width as a f() of length',
xlab = 'Length (cm)', ylab = 'Width (cm)',
cex = .75, pch = 19)
iris_fit_1<- lm(Petal.Width ~ Petal.Length)
abline(iris_fit_1, col = 'red')
View(iris_fit_1)
confint(iris_fit_1)
plot(Petal.Length, Petal.Width)
plot(Petal.Length, Petal.Width,
frame.plot = FALSE,
main = 'Petal width as a f() of length',
xlab = 'Length (cm)', ylab = 'Width (cm)',
cex = .75, pch = 19)
iris_fit_1<- lm(Petal.Width ~ Petal.Length)
abline(iris_fit_1, col = 'red')
abline(confint(iris_fit_1))
coef(iris_fit_1)
plot(Petal.Length, Petal.Width)
plot(Petal.Length, Petal.Width,
frame.plot = FALSE,
main = 'Petal width as a f() of length',
xlab = 'Length (cm)', ylab = 'Width (cm)',
cex = .75, pch = 19)
iris_fit_1<- lm(Petal.Width ~ Petal.Length)
abline(iris_fit_1, col = 'red')
text(x = 2, y = 2, lables = paste('Slope =',coef(iris_fit_1)[2]))
paste('Slope =',coef(iris_fit_1)[2])
plot(Petal.Length, Petal.Width)
plot(Petal.Length, Petal.Width,
frame.plot = FALSE,
main = 'Petal width as a f() of length',
xlab = 'Length (cm)', ylab = 'Width (cm)',
cex = .75, pch = 19)
iris_fit_1<- lm(Petal.Width ~ Petal.Length)
abline(iris_fit_1, col = 'red')
text(x = 2, y = 2, lables = paste('Slope =',round(coef(iris_fit_1)[2]),digits = 2))
plot(Petal.Length, Petal.Width)
plot(Petal.Length, Petal.Width,
frame.plot = FALSE,
main = 'Petal width as a f() of length',
xlab = 'Length (cm)', ylab = 'Width (cm)',
cex = .75, pch = 19)
iris_fit_1<- lm(Petal.Width ~ Petal.Length)
abline(iris_fit_1, col = 'red')
text(lables = paste('Slope =',round(coef(iris_fit_1)[2]),digits = 2))
plot(Petal.Length, Petal.Width)
plot(Petal.Length, Petal.Width,
frame.plot = FALSE,
main = 'Petal width as a f() of length',
xlab = 'Length (cm)', ylab = 'Width (cm)',
cex = .75, pch = 19)
iris_fit_1<- lm(Petal.Width ~ Petal.Length)
abline(iris_fit_1, col = 'red')
text(2, lables = paste('Slope =',round(coef(iris_fit_1)[2]),digits = 2))
paste('Slope =',round(coef(iris_fit_1)[2]),digits = 2)
coef(iris_fit_1)[2]
round(coef(iris_fit_1)[2]),digits = 2)
plot(Petal.Length, Petal.Width)
plot(Petal.Length, Petal.Width,
frame.plot = FALSE,
main = 'Petal width as a f() of length',
xlab = 'Length (cm)', ylab = 'Width (cm)',
cex = .75, pch = 19)
iris_fit_1<- lm(Petal.Width ~ Petal.Length)
abline(iris_fit_1, col = 'red')
text(2, lables = paste('Slope =',round(coef(iris_fit_1)[2],digits = 2)))
paste('Slope =',round(coef(iris_fit_1)[2],digits = 2))
plot(Petal.Length, Petal.Width)
plot(Petal.Length, Petal.Width,
frame.plot = FALSE,
main = 'Petal width as a f() of length',
xlab = 'Length (cm)', ylab = 'Width (cm)',
cex = .75, pch = 19)
iris_fit_1<- lm(Petal.Width ~ Petal.Length)
text(2, lables = paste('Slope =',round(coef(iris_fit_1)[2],digits = 2)))
abline(iris_fit_1, col = 'red')
plot(Petal.Length, Petal.Width)
plot(Petal.Length, Petal.Width,
frame.plot = FALSE,
main = 'Petal width as a f() of length',
xlab = 'Length (cm)', ylab = 'Width (cm)',
cex = .75, pch = 19)
iris_fit_1<- lm(Petal.Width ~ Petal.Length)
text(2, lables = 'a')
abline(iris_fit_1, col = 'red')
#paste('Slope =',round(coef(iris_fit_1)[2],digits = 2))
plot(Petal.Length, Petal.Width)
plot(Petal.Length, Petal.Width,
frame.plot = FALSE,
main = 'Petal width as a f() of length',
xlab = 'Length (cm)', ylab = 'Width (cm)',
cex = .75, pch = 19)
iris_fit_1<- lm(Petal.Width ~ Petal.Length)
text(2, labels = paste('Slope =',round(coef(iris_fit_1)[2],digits = 2)))
abline(iris_fit_1, col = 'red')
plot(Petal.Length, Petal.Width)
plot(Petal.Length, Petal.Width,
frame.plot = FALSE,
main = 'Petal width as a f() of length',
xlab = 'Length (cm)', ylab = 'Width (cm)',
cex = .75, pch = 19)
iris_fit_1<- lm(Petal.Width ~ Petal.Length)
text(2, 2, labels = paste('Slope =',round(coef(iris_fit_1)[2],digits = 2)))
abline(iris_fit_1, col = 'red')
plot(Petal.Length, Petal.Width)
plot(Petal.Length, Petal.Width,
frame.plot = FALSE,
main = 'Petal width as a f() of length',
xlab = 'Length (cm)', ylab = 'Width (cm)',
cex = .75, pch = 19)
iris_fit_1<- lm(Petal.Width ~ Petal.Length)
text(3, .5, labels = paste('Slope =',round(coef(iris_fit_1)[2],digits = 2)))
abline(iris_fit_1, col = 'red')
plot(Petal.Length, Petal.Width)
plot(Petal.Length, Petal.Width,
frame.plot = FALSE,
main = 'Petal width as a f() of length',
xlab = 'Length (cm)', ylab = 'Width (cm)',
cex = .75, pch = 19)
iris_fit_1<- lm(Petal.Width ~ Petal.Length)
abline(iris_fit_1, col = 'red')
text(3, .5, col = 'red', cex = 2,
labels = paste('Slope =',round(coef(iris_fit_1)[2],digits = 2)))
plot(Petal.Length, Petal.Width)
plot(Petal.Length, Petal.Width,
frame.plot = FALSE,
main = 'Petal width as a f() of length',
xlab = 'Length (cm)', ylab = 'Width (cm)',
cex = .75, pch = 19)
iris_fit_1<- lm(Petal.Width ~ Petal.Length)
abline(iris_fit_1, col = 'red')
text(3, .5, col = 'red', cex = .5,
labels = paste('Slope =',round(coef(iris_fit_1)[2],digits = 2)))
plot(Petal.Length, Petal.Width)
plot(Petal.Length, Petal.Width,
frame.plot = FALSE,
main = 'Petal width as a f() of length',
xlab = 'Length (cm)', ylab = 'Width (cm)',
cex = .75, pch = 19)
iris_fit_1<- lm(Petal.Width ~ Petal.Length)
abline(iris_fit_1, col = 'red')
text(3, .5, col = 'red', cex = 1,
labels = paste('Slope =',round(coef(iris_fit_1)[2],digits = 2)))
plot(Petal.Length, Petal.Width)
plot(Petal.Length, Petal.Width,
frame.plot = FALSE,
main = 'Petal width as a f() of length',
xlab = 'Length (cm)', ylab = 'Width (cm)',
cex = .75, pch = 19)
iris_fit_1<- lm(Petal.Width ~ Petal.Length)
abline(iris_fit_1, col = 'red')
text(3, .5, col = 'red', cex = .8,
labels = paste('Slope =',round(coef(iris_fit_1)[2],digits = 2)))
plot(Petal.Length, Petal.Width)  # A basic scatterplot
plot(Petal.Length, Petal.Width,  # A better one
frame.plot = FALSE,
main = 'Petal width as a f() of length',
xlab = 'Length (cm)', ylab = 'Width (cm)',
cex = .75, pch = 19)
iris_fit_1<- lm(Petal.Width ~ Petal.Length) # With a regression line
abline(iris_fit_1, col = 'red')
text(3, .5, col = 'red', cex = .8,
labels = paste('Slope =',round(coef(iris_fit_1)[2],digits = 2)))
par(mfrow = c(2, 2))
plot(iris_fit_1) # Perhaps we want to see model diagnostics
install.packages('stringi')
blogdown:::serve_site()
blogdown::install_hugo()
blogdown:::serve_site()
blogdown:::serve_site()
blogdown:::new_post_addin()
s
2+2
8/36
knitr::opts_chunk$set(collapse = TRUE)
set.seed(234)
die <- c(1,2,3,4,5,6)
d1 <- sample(die,1000)
rep(sample(die,1),times=10)
repeat(sample(die,1),times=10)
replicate(10, sample(die,1))
set.seed(234)
die <- c(1,2,3,4,5,6)
d1 <- replicate(10, sample(die,1))
d2 <- replicate(10, sample(die,1))
rolls <- d1 + d2
ifelse(rolls == 7 | rolls == 11, 1, 0)
set.seed(234)
dice <- c(1,2,3,4,5,6)
d1 <- replicate(1000, sample(die,1))
d2 <- replicate(1000, sample(die,1))
rolls <- d1 + d2
mean(ifelse(rolls == 7 | rolls == 11, 1, 0))
set.seed(234)
dice <- c(1,2,3,4,5,6)
d1 <- replicate(10000, sample(die,1))
d2 <- replicate(10000, sample(die,1))
rolls <- d1 + d2
mean(ifelse(rolls == 7 | rolls == 11, 1, 0))
set.seed(234)
dice <- c(1,2,3,4,5,6)
d1 <- replicate(10000, sample(die,1))
d2 <- replicate(10000, sample(die,1))
rolls <- d1 + d2
mean(ifelse(rolls == 7 | rolls == 11, 1, 0))
1/6
set.seed(235)
dice <- c(1,2,3,4,5,6)
d1 <- replicate(10000, sample(die,1, prob = c(1/6, 1/6, 1.1/6, .9/6, 1/6, 1/6)))
d2 <- replicate(10000, sample(die,1, prob = c(1/6, 1/6, .9/6, 1.1/6, 1/6, 1/6)))
rolls <- d1 + d2
mean(ifelse(rolls == 7 | rolls == 11, 1, 0))
set.seed(235)
dice <- c(1,2,3,4,5,6)
d1 <- replicate(10000, sample(die,1, prob = c(1/6, 1/6, 1.5/6, .9/6, 1/6, 1/6)))
d2 <- replicate(10000, sample(die,1, prob = c(1/6, 1/6, .9/6, .5/6, 1/6, 1/6)))
rolls <- d1 + d2
mean(ifelse(rolls == 7 | rolls == 11, 1, 0))
set.seed(235)
dice <- c(1,2,3,4,5,6)
d1 <- replicate(10000, sample(die,1, prob = c(1/6, 1/6, 1.5/6, .5/6, 1/6, 1/6)))
d2 <- replicate(10000, sample(die,1, prob = c(1/6, 1/6, .5/6, 1.5/6, 1/6, 1/6)))
rolls <- d1 + d2
mean(ifelse(rolls == 7 | rolls == 11, 1, 0))
set.seed(235)
dice <- c(1,2,3,4,5,6)
d1 <- replicate(10000, sample(die,1, prob = c(1/6, 1/6, 1.9/6, .1/6, 1/6, 1/6)))
d2 <- replicate(10000, sample(die,1, prob = c(1/6, 1/6, .1/6, 1.9/6, 1/6, 1/6)))
rolls <- d1 + d2
mean(ifelse(rolls == 7 | rolls == 11, 1, 0))
set.seed(235)
dice <- c(1,2,3,4,5,6)
d1 <- replicate(10000, sample(die,1, prob = c(.1, .1, .5, .1, .1, .1)))
d2 <- replicate(10000, sample(die,1, prob = c(.1, .1, .1, .5, .1, .1)))
rolls <- d1 + d2
mean(ifelse(rolls == 7 | rolls == 11, 1, 0))
blogdown:::serve_site()
binom.test(x= sum(fair_711), n= length(fair_711), p= 8/36)
knitr::opts_chunk$set(collapse = TRUE)
set.seed(234)
dice <- c(1,2,3,4,5,6)
d1 <- replicate(10000, sample(dice,1))
d2 <- replicate(10000, sample(dice,1))
rolls <- d1 + d2
fair_711 <- ifelse(rolls == 7 | rolls == 11, 1, 0)
mean(fair_711)
set.seed(235)
dice <- c(1,2,3,4,5,6)
d1 <- replicate(10000, sample(dice,1, prob = c(.1, .1, .5, .1, .1, .1)))
d2 <- replicate(10000, sample(dice,1, prob = c(.1, .1, .1, .5, .1, .1)))
rolls <- d1 + d2
loaded_711 <- ifelse(rolls == 7 | rolls == 11, 1, 0)
mean(loaded_711)
binom.test(x= sum(fair_711), n= length(fair_711), p= 8/36)
binom.test(x= sum(fair_711), n= length(fair_711), p= 8/36)
binom.test(x= sum(loaded_711), n= length(fair_711), p= 8/36)
binom.test(x= sum(fair_711), n= length(fair_711), p= 8/36)
binom.test(x= sum(loaded_711), n= length(fair_711), p= 8/36)
# normal aprox.
phat <- mean(fair_711)
qnorm(
c(.025, .975),
mean= ,
sd= sqrt(phat * (1- phat)/ length(fair_711))
)
binom.test(x= sum(fair_711), n= length(fair_711), p= 8/36)
binom.test(x= sum(loaded_711), n= length(fair_711), p= 8/36)
# normal aprox.
phat <- mean(fair_711)
qnorm(
c(.025, .975),
mean= phat,
sd= sqrt(phat * (1- phat)/ length(fair_711))
)
cum_success <- cumsum(fair_711)
cum_trials <- c(1:length(fair_711))
cum_phat <- cum_success/cum_trials
cum_phat
set.seed(235)
dice <- c(1,2,3,4,5,6)
d1 <- replicate(1000, sample(dice,1, prob = c(.1, .1, .5, .1, .1, .1)))
d2 <- replicate(1000, sample(dice,1, prob = c(.1, .1, .1, .5, .1, .1)))
rolls <- d1 + d2
loaded_711 <- ifelse(rolls == 7 | rolls == 11, 1, 0)
mean(loaded_711)
set.seed(234)
dice <- c(1,2,3,4,5,6)
d1 <- replicate(1000, sample(dice,1))
d2 <- replicate(1000, sample(dice,1))
rolls <- d1 + d2
fair_711 <- ifelse(rolls == 7 | rolls == 11, 1, 0)
mean(fair_711)
# exact method
# this function returns an interval and gives a pvalue testing a null p
binom.test(x= sum(fair_711), n= length(fair_711), p= 8/36)
# normal aprox.
phat <- mean(fair_711)
qnorm(
c(.025, .975),
mean= phat,
sd= sqrt(phat * (1- phat)/ length(fair_711))
)
cum_success <- cumsum(fair_711)
cum_trials <- c(1:length(fair_711))
cum_phat <- cum_success/cum_trials
cum_low <- qnorm(.025,  mean= cum_phat,
sd= sqrt(cum_phat * (1- cum_phat)/ cum_trials)
)
cum_success <- cumsum(fair_711)
n_trials <- c(1:length(fair_711))
cum_phat <- cum_success/n_trials
cum_low <- qnorm(.025,  mean= cum_phat,
sd= sqrt(cum_phat * (1- cum_phat)/ n_trials)
)
cum_hi <- qnorm(.975,  mean= cum_phat,
sd= sqrt(cum_phat * (1- cum_phat)/ n_trials)
)
install.packages('gganimate')
sim_rolls<- data.frame{
sim_rolls<- data.frame(
cum_success = cumsum(fair_711),
n_trials = c(1:length(fair_711)),
cum_phat = cum_success/n_trials,
cum_low = qnorm(.025,  mean= cum_phat,
sd= sqrt(cum_phat * (1- cum_phat)/ n_trials)
),
cum_hi = qnorm(.975,  mean= cum_phat,
sd= sqrt(cum_phat * (1- cum_phat)/ n_trials)
)
)
View(sim_rolls)
ggplot(data= sim_rolls)+
geom_line(aes(x= n_trials, y= cum_phat))
library(ggplot2)
library(gganimate)
sim_rolls<- data.frame(
cum_success = cumsum(fair_711),
n_trials = c(1:length(fair_711)),
cum_phat = cum_success/n_trials,
cum_low = qnorm(.025,  mean= cum_phat,
sd= sqrt(cum_phat * (1- cum_phat)/ n_trials)
),
cum_hi = qnorm(.975,  mean= cum_phat,
sd= sqrt(cum_phat * (1- cum_phat)/ n_trials)
)
)
ggplot(data= sim_rolls)+
geom_line(aes(x= n_trials, y= cum_phat))
ggplot(data= sim_rolls)+
geom_line(aes(x= n_trials, y= cum_phat))+
scale_y_continuous(limits = c(0, .5))
View(sim_rolls)
ggplot(data= sim_rolls)+
geom_line(aes(x= n_trials, y= cum_phat, col='red'))+
geom_line(aes(x= n_trials, y= cum_low))+
geom_line(aes(x= n_trials, y= cum_hi))+
scale_y_continuous(limits = c(0, .5))
ggplot(data= sim_rolls, aes(frame= n_trials))+
geom_line(aes(x= n_trials, y= cum_phat, col='red'))+
geom_line(aes(x= n_trials, y= cum_low))+
geom_line(aes(x= n_trials, y= cum_hi))+
scale_y_continuous(limits = c(0, .5))
library(ggplot2)
library(gganimate)
sim_rolls<- data.frame(
cum_success = cumsum(fair_711),
n_trials = c(1:length(fair_711)),
cum_phat = cum_success/n_trials,
cum_low = qnorm(.025,  mean= cum_phat,
sd= sqrt(cum_phat * (1- cum_phat)/ n_trials)
),
cum_hi = qnorm(.975,  mean= cum_phat,
sd= sqrt(cum_phat * (1- cum_phat)/ n_trials)
)
)
plot<- ggplot(data= sim_rolls, aes(frame= n_trials))+
geom_line(aes(x= n_trials, y= cum_phat, col='red'))+
geom_line(aes(x= n_trials, y= cum_low))+
geom_line(aes(x= n_trials, y= cum_hi))+
scale_y_continuous(limits = c(0, .5))
gg_animate(plot)
library(ggplot2)
library(gganimate)
sim_rolls<- data.frame(
cum_success = cumsum(fair_711),
n_trials = c(1:length(fair_711)),
cum_phat = cum_success/n_trials,
cum_low = qnorm(.025,  mean= cum_phat,
sd= sqrt(cum_phat * (1- cum_phat)/ n_trials)
),
cum_hi = qnorm(.975,  mean= cum_phat,
sd= sqrt(cum_phat * (1- cum_phat)/ n_trials)
)
)
ggplot(data= sim_rolls)+
geom_line(aes(x= n_trials, y= cum_phat, col='red'))+
geom_line(aes(x= n_trials, y= cum_low))+
geom_line(aes(x= n_trials, y= cum_hi))+
scale_y_continuous(limits = c(0, .5))+
transition_time(n_trials)
?renderers
install.packages('gifski')
library(ggplot2)
library(gganimate)
sim_rolls<- data.frame(
cum_success = cumsum(fair_711),
n_trials = c(1:length(fair_711)),
cum_phat = cum_success/n_trials,
cum_low = qnorm(.025,  mean= cum_phat,
sd= sqrt(cum_phat * (1- cum_phat)/ n_trials)
),
cum_hi = qnorm(.975,  mean= cum_phat,
sd= sqrt(cum_phat * (1- cum_phat)/ n_trials)
)
)
ggplot(data= sim_rolls)+
geom_line(aes(x= n_trials, y= cum_phat, col='red'))+
geom_line(aes(x= n_trials, y= cum_low))+
geom_line(aes(x= n_trials, y= cum_hi))+
scale_y_continuous(limits = c(0, .5))+
transition_time(n_trials)
install.packages('png')
library(ggplot2)
library(gganimate)
sim_rolls<- data.frame(
cum_success = cumsum(fair_711),
n_trials = c(1:length(fair_711)),
cum_phat = cum_success/n_trials,
cum_low = qnorm(.025,  mean= cum_phat,
sd= sqrt(cum_phat * (1- cum_phat)/ n_trials)
),
cum_hi = qnorm(.975,  mean= cum_phat,
sd= sqrt(cum_phat * (1- cum_phat)/ n_trials)
)
)
ggplot(data= sim_rolls)+
geom_line(aes(x= n_trials, y= cum_phat, col='red'))+
geom_line(aes(x= n_trials, y= cum_low))+
geom_line(aes(x= n_trials, y= cum_hi))+
scale_y_continuous(limits = c(0, .5))+
transition_time(n_trials)
install.packages('transformr')
library(ggplot2)
library(gganimate)
sim_rolls<- data.frame(
cum_success = cumsum(fair_711),
n_trials = c(1:length(fair_711)),
cum_phat = cum_success/n_trials,
cum_low = qnorm(.025,  mean= cum_phat,
sd= sqrt(cum_phat * (1- cum_phat)/ n_trials)
),
cum_hi = qnorm(.975,  mean= cum_phat,
sd= sqrt(cum_phat * (1- cum_phat)/ n_trials)
)
)
ggplot(data= sim_rolls)+
geom_line(aes(x= n_trials, y= cum_phat, col='red'))+
geom_line(aes(x= n_trials, y= cum_low))+
geom_line(aes(x= n_trials, y= cum_hi))+
scale_y_continuous(limits = c(0, .5))+
transition_time(n_trials)
ggplot(data= sim_rolls)+
geom_line(aes(group= n_trials, x= n_trials, y= cum_phat, col='red'))+
geom_line(aes(group= n_trials, x= n_trials, y= cum_low))+
geom_line(aes(group= n_trials, x= n_trials, y= cum_hi))+
scale_y_continuous(limits = c(0, .5))+
transition_time(n_trials)
ggplot(data= sim_rolls)+
geom_line(aes(x= n_trials, y= cum_phat, col='red'))+
geom_line(aes(x= n_trials, y= cum_low))+
geom_line(aes(x= n_trials, y= cum_hi))+
scale_y_continuous(limits = c(0, .5))+
transition_reveal(n_trials)
blogdown:::serve_site()
library(ggplot2)
library(gganimate)
cum_success <- cumsum(fair_711)
blogdown:::serve_site()
blogdown:::serve_site()

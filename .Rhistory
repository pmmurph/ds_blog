blogdown:::serve_site()
blogdown:::serve_site()
blogdown:::new_post_addin()
#this should be one of the first functions you learn, it allows for adhoc data entry
data<- data.table(header= TRUE, text="
name age
Homer 45
Marge 43
Bart 13
Lisa 11
Maggie 2
")
#this should be one of the first functions you learn, it allows for adhoc data entry
data<- read.table(header= TRUE, text="
name age
Homer 45
Marge 43
Bart 13
Lisa 11
Maggie 2
")
data
write.csv(data,"simpsons.csv")
blogdown:::serve_site()
#read.csv is simply a wrapper for read.table
read.csv("simpsons.csv")
write.csv(data,"simpsons.csv")
data<- read.table(header= TRUE, text="
name age
Homer 45
Marge 43
Bart 13
Lisa 11
Maggie 2
")
data
write.csv(data,"simpsons.csv")
#read.csv is simply a wrapper for read.table
read.csv("simpsons.csv")
library(readr)
str(read.csv("simpsons.csv"))
str(read_csv("simpsons.csv"))
library(readr,quietly = TRUE)
str(read.csv("simpsons.csv"))
str(read_csv("simpsons.csv"))
library(readr,quietly = TRUE)
str(read.csv("simpsons.csv"))
write_csv(data,"simpsons.csv")
str(read_csv("simpsons.csv"))
blogdown:::serve_site()
blogdown:::serve_site()
data<- read.table(header= TRUE, text="
name age
Homer 45
Marge 43
Bart 13
Lisa 11
Maggie 2
")
data
write.csv(data,"simpsons.csv")
#read.csv is simply a wrapper for read.table
read.csv("simpsons.csv")
library(readr,quietly = TRUE)
str(read.csv("simpsons.csv"))  #notice a factor and three variables
write_csv(data,"simpsons.csv")  #readr uses '_' instead of '.'
str(read_csv("simpsons.csv"))  #this is how we want our data
library(readr)
str(read.csv("simpsons.csv"))  #notice a factor and three variables
write_csv(data,"simpsons.csv")  #readr uses '_' instead of '.'
str(read_csv("simpsons.csv"))  #this is how we want our data
data<- read.table(header= TRUE, text="
name age
Homer 45
Marge 43
Bart 13
Lisa 11
Maggie 2
")
data
write.csv(data,"simpsons.csv")
#read.csv is simply a wrapper for read.table
read.csv("simpsons.csv")
library(readr)
str(read.csv("simpsons.csv"))  #notice a factor and three variables
write_csv(data,"simpsons.csv")  #readr uses '_' instead of '.'
str(read_csv("simpsons.csv"))  #this is how we want our data
blogdown:::new_post_addin()
blogdown:::serve_site()
blogdown:::serve_site()
blogdown:::serve_site()
blogdown:::serve_site()
address <- c(742, 'Evergreen', 'Terrace')  # 742 will coerce to a string
nchar(address)
toupper(address)
paste(address[2], address[3])
address <- paste(address, collapse = ' ')
address
gsub('[^[:digit:]]','', address)      # regular expression used to parse the numeric address
blogdown:::serve_site()
blogdown:::new_post_addin()
attach(iris)    # this loads iris into a search path, so we dont have to type it anymore
plot(iris)
plot(Species)
plot(Sepal.Length)
hist(Sepal.Length)
str(iris)
str(iris)
attach(iris)    # this loads iris into a search path, so we dont have to type it anymore
hist(Sepal.Length)
par(mfrow= c(2,2))
hist(Sepal.Length)
hist(Sepal.Width)
hist(Petal.Length)
hist(Petal.Width)
str(mtcars)
attach(mtcars)
str(mtcars)
hist(mpg, col=cyl)
str(iris)
attach(iris)    # this loads iris into a search path, so we dont have to type it anymore
hist(Sepal.Width)
par(mfrow= c(2,2))
hist(Sepal.Length)
hist(Sepal.Width)
hist(Petal.Length)
hist(Petal.Width)
par(mfrow= c(1,1))
hist(Sepal.Length, breaks = 10)
hist(Sepal.Length, breaks = seq(from=4, to=8, by=.5))
hist(Sepal.Length, breaks = seq(from=4, to=8, by=.25))
hist(Sepal.Length, breaks = seq(from=3, to=9, by=.25))
hist(Sepal.Length,
breaks = seq(from=3, to=9, by=.25),
density = 1)
str(iris)
attach(iris)    # this loads iris into a search path, so we dont have to type it anymore
hist(Sepal.Length)
hist(Sepal.Length,
breaks = seq(from=3, to=9, by=.25),
density = 100)
hist(Sepal.Length,
breaks = seq(from=3, to=9, by=.25),
density = 10)
hist(Sepal.Length,
breaks = seq(from=3, to=9, by=.25),
main= 'Distribution of Sepal Length',
xaxis= 'Length in cm',
border = NULL, col='ccc')
hist(Sepal.Length,
breaks = seq(from=3, to=9, by=.25),
main= 'Distribution of Sepal Length',
xaxis= 'Length in cm',
border = NULL, col='cccccc')
hist(Sepal.Length,
breaks = seq(from=3, to=9, by=.25),
main= 'Distribution of Sepal Length',
xaxis= 'Length in cm',
border = NULL, col='grey')
hist(Sepal.Length,
breaks = seq(from=3, to=9, by=.25),
main= 'Distribution of Sepal Length',
xlab= 'Length in cm',
col='grey')
hist(Sepal.Length)
hist(Sepal.Length,
breaks = seq(from=3, to=9, by=.25),
main= 'Distribution of Sepal Length',
xlab= 'Length in cm',
col='grey')
hist(Sepal.Length,
breaks = seq(from=3, to=9, by=.333),      # breaks
main= 'Distribution of Sepal Length',
xlab= 'Length in cm',
col='grey')
blogdown:::serve_site()
plot(table(rpois(100, 5)), type = "h", col = "red", lwd = 10,
main = "rpois(100, lambda = 5)")
knitr::opts_chunk$set(collapse = TRUE)
str(iris)
attach(iris)    # this loads iris into a search path, so we dont have to type it anymore
hist(Sepal.Length)
hist(Sepal.Length,
breaks = seq(from=3, to=9, by=.333),      # always check the breaks of a histogram
main= 'Distribution of Sepal Length',
xlab= 'Length in cm',
col='grey')
plot(Petal.Length,Petal.Width)
plot(Petal.Length,Petal.Width, col= Species)
legend(col= Species)
plot(Petal.Length,Petal.Width)
plot(Petal.Length,Petal.Width, col= Species)
legend(legend=unique(Species),col= Species))
plot(Petal.Length,Petal.Width)
plot(Petal.Length,Petal.Width, col= Species)
legend(legend=unique(Species),col= Species)
plot(Petal.Length,Petal.Width)
plot(Petal.Length,Petal.Width, col= Species)
legend('topleft', legend=unique(Species), col= Species)
plot(Petal.Length,Petal.Width)
plot(Petal.Length,Petal.Width, col= Species)
legend('topleft', legend=unique(Species), col= 1:3)
plot1<- plot(Petal.Length,Petal.Width, col= Species)
plot1
plot(Petal.Length,Petal.Width)
plot(Petal.Length, Petal.Width,
frame.plot = FALSE,
main = 'Petal width as a f() of length',
xlab = 'Length (cm)',
ylab = 'Width (cm)',
cex = 2px,
plot(Petal.Length, Petal.Width,
frame.plot = FALSE,
main = 'Petal width as a f() of length',
xlab = 'Length (cm)',
ylab = 'Width (cm)',
cex = 1,
pch = 19)
plot(Petal.Length, Petal.Width,
frame.plot = FALSE,
main = 'Petal width as a f() of length',
xlab = 'Length (cm)',
ylab = 'Width (cm)',
cex = .5,
pch = 19)
plot(Petal.Length, Petal.Width)
plot(Petal.Length, Petal.Width,
frame.plot = FALSE,
main = 'Petal width as a f() of length',
xlab = 'Length (cm)', ylab = 'Width (cm)',
cex = .75, pch = 19)
plot(Petal.Length, Petal.Width)
plot(Petal.Length, Petal.Width,
frame.plot = FALSE,
main = 'Petal width as a f() of length',
xlab = 'Length (cm)', ylab = 'Width (cm)',
cex = .75, pch = 19)
iris_fit_1<- lm(Petal.Width ~ Petal.Length)
abline(iris_fit_1, col = 'red')
View(iris_fit_1)
confint(iris_fit_1)
plot(Petal.Length, Petal.Width)
plot(Petal.Length, Petal.Width,
frame.plot = FALSE,
main = 'Petal width as a f() of length',
xlab = 'Length (cm)', ylab = 'Width (cm)',
cex = .75, pch = 19)
iris_fit_1<- lm(Petal.Width ~ Petal.Length)
abline(iris_fit_1, col = 'red')
abline(confint(iris_fit_1))
coef(iris_fit_1)
plot(Petal.Length, Petal.Width)
plot(Petal.Length, Petal.Width,
frame.plot = FALSE,
main = 'Petal width as a f() of length',
xlab = 'Length (cm)', ylab = 'Width (cm)',
cex = .75, pch = 19)
iris_fit_1<- lm(Petal.Width ~ Petal.Length)
abline(iris_fit_1, col = 'red')
text(x = 2, y = 2, lables = paste('Slope =',coef(iris_fit_1)[2]))
paste('Slope =',coef(iris_fit_1)[2])
plot(Petal.Length, Petal.Width)
plot(Petal.Length, Petal.Width,
frame.plot = FALSE,
main = 'Petal width as a f() of length',
xlab = 'Length (cm)', ylab = 'Width (cm)',
cex = .75, pch = 19)
iris_fit_1<- lm(Petal.Width ~ Petal.Length)
abline(iris_fit_1, col = 'red')
text(x = 2, y = 2, lables = paste('Slope =',round(coef(iris_fit_1)[2]),digits = 2))
plot(Petal.Length, Petal.Width)
plot(Petal.Length, Petal.Width,
frame.plot = FALSE,
main = 'Petal width as a f() of length',
xlab = 'Length (cm)', ylab = 'Width (cm)',
cex = .75, pch = 19)
iris_fit_1<- lm(Petal.Width ~ Petal.Length)
abline(iris_fit_1, col = 'red')
text(lables = paste('Slope =',round(coef(iris_fit_1)[2]),digits = 2))
plot(Petal.Length, Petal.Width)
plot(Petal.Length, Petal.Width,
frame.plot = FALSE,
main = 'Petal width as a f() of length',
xlab = 'Length (cm)', ylab = 'Width (cm)',
cex = .75, pch = 19)
iris_fit_1<- lm(Petal.Width ~ Petal.Length)
abline(iris_fit_1, col = 'red')
text(2, lables = paste('Slope =',round(coef(iris_fit_1)[2]),digits = 2))
paste('Slope =',round(coef(iris_fit_1)[2]),digits = 2)
coef(iris_fit_1)[2]
round(coef(iris_fit_1)[2]),digits = 2)
plot(Petal.Length, Petal.Width)
plot(Petal.Length, Petal.Width,
frame.plot = FALSE,
main = 'Petal width as a f() of length',
xlab = 'Length (cm)', ylab = 'Width (cm)',
cex = .75, pch = 19)
iris_fit_1<- lm(Petal.Width ~ Petal.Length)
abline(iris_fit_1, col = 'red')
text(2, lables = paste('Slope =',round(coef(iris_fit_1)[2],digits = 2)))
paste('Slope =',round(coef(iris_fit_1)[2],digits = 2))
plot(Petal.Length, Petal.Width)
plot(Petal.Length, Petal.Width,
frame.plot = FALSE,
main = 'Petal width as a f() of length',
xlab = 'Length (cm)', ylab = 'Width (cm)',
cex = .75, pch = 19)
iris_fit_1<- lm(Petal.Width ~ Petal.Length)
text(2, lables = paste('Slope =',round(coef(iris_fit_1)[2],digits = 2)))
abline(iris_fit_1, col = 'red')
plot(Petal.Length, Petal.Width)
plot(Petal.Length, Petal.Width,
frame.plot = FALSE,
main = 'Petal width as a f() of length',
xlab = 'Length (cm)', ylab = 'Width (cm)',
cex = .75, pch = 19)
iris_fit_1<- lm(Petal.Width ~ Petal.Length)
text(2, lables = 'a')
abline(iris_fit_1, col = 'red')
#paste('Slope =',round(coef(iris_fit_1)[2],digits = 2))
plot(Petal.Length, Petal.Width)
plot(Petal.Length, Petal.Width,
frame.plot = FALSE,
main = 'Petal width as a f() of length',
xlab = 'Length (cm)', ylab = 'Width (cm)',
cex = .75, pch = 19)
iris_fit_1<- lm(Petal.Width ~ Petal.Length)
text(2, labels = paste('Slope =',round(coef(iris_fit_1)[2],digits = 2)))
abline(iris_fit_1, col = 'red')
plot(Petal.Length, Petal.Width)
plot(Petal.Length, Petal.Width,
frame.plot = FALSE,
main = 'Petal width as a f() of length',
xlab = 'Length (cm)', ylab = 'Width (cm)',
cex = .75, pch = 19)
iris_fit_1<- lm(Petal.Width ~ Petal.Length)
text(2, 2, labels = paste('Slope =',round(coef(iris_fit_1)[2],digits = 2)))
abline(iris_fit_1, col = 'red')
plot(Petal.Length, Petal.Width)
plot(Petal.Length, Petal.Width,
frame.plot = FALSE,
main = 'Petal width as a f() of length',
xlab = 'Length (cm)', ylab = 'Width (cm)',
cex = .75, pch = 19)
iris_fit_1<- lm(Petal.Width ~ Petal.Length)
text(3, .5, labels = paste('Slope =',round(coef(iris_fit_1)[2],digits = 2)))
abline(iris_fit_1, col = 'red')
plot(Petal.Length, Petal.Width)
plot(Petal.Length, Petal.Width,
frame.plot = FALSE,
main = 'Petal width as a f() of length',
xlab = 'Length (cm)', ylab = 'Width (cm)',
cex = .75, pch = 19)
iris_fit_1<- lm(Petal.Width ~ Petal.Length)
abline(iris_fit_1, col = 'red')
text(3, .5, col = 'red', cex = 2,
labels = paste('Slope =',round(coef(iris_fit_1)[2],digits = 2)))
plot(Petal.Length, Petal.Width)
plot(Petal.Length, Petal.Width,
frame.plot = FALSE,
main = 'Petal width as a f() of length',
xlab = 'Length (cm)', ylab = 'Width (cm)',
cex = .75, pch = 19)
iris_fit_1<- lm(Petal.Width ~ Petal.Length)
abline(iris_fit_1, col = 'red')
text(3, .5, col = 'red', cex = .5,
labels = paste('Slope =',round(coef(iris_fit_1)[2],digits = 2)))
plot(Petal.Length, Petal.Width)
plot(Petal.Length, Petal.Width,
frame.plot = FALSE,
main = 'Petal width as a f() of length',
xlab = 'Length (cm)', ylab = 'Width (cm)',
cex = .75, pch = 19)
iris_fit_1<- lm(Petal.Width ~ Petal.Length)
abline(iris_fit_1, col = 'red')
text(3, .5, col = 'red', cex = 1,
labels = paste('Slope =',round(coef(iris_fit_1)[2],digits = 2)))
plot(Petal.Length, Petal.Width)
plot(Petal.Length, Petal.Width,
frame.plot = FALSE,
main = 'Petal width as a f() of length',
xlab = 'Length (cm)', ylab = 'Width (cm)',
cex = .75, pch = 19)
iris_fit_1<- lm(Petal.Width ~ Petal.Length)
abline(iris_fit_1, col = 'red')
text(3, .5, col = 'red', cex = .8,
labels = paste('Slope =',round(coef(iris_fit_1)[2],digits = 2)))
plot(Petal.Length, Petal.Width)  # A basic scatterplot
plot(Petal.Length, Petal.Width,  # A better one
frame.plot = FALSE,
main = 'Petal width as a f() of length',
xlab = 'Length (cm)', ylab = 'Width (cm)',
cex = .75, pch = 19)
iris_fit_1<- lm(Petal.Width ~ Petal.Length) # With a regression line
abline(iris_fit_1, col = 'red')
text(3, .5, col = 'red', cex = .8,
labels = paste('Slope =',round(coef(iris_fit_1)[2],digits = 2)))
par(mfrow = c(2, 2))
plot(iris_fit_1) # Perhaps we want to see model diagnostics
install.packages('stringi')
blogdown:::serve_site()
